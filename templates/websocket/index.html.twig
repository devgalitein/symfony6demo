{% extends 'base.html.twig' %}
{% block body %}
    <style>
        body {
            font-family: arial;
        }

        .form-group {
            margin-bottom: 10px;
        }

        input {
            border: solid lightgrey 1px;
            padding: 8px;
        }

        label {
            display: inline-block;
            min-width: 150px;
        }

        #chat {
            height: 400px;
            width: 600px;
            border: solid lightgrey 1px;
            overflow: auto;
            margin-bottom: 20px;
        }

        button {
            padding: 6px 12px;
        }

        .message {
            padding: 10px 5px;
            margin-bottom: 10px;
            border-bottom: solid lightgrey 1px;
        }
    </style>


    <div id="chat">
        {% for chat_message in chat_messages %}
            <div class='message'>
                <strong>{{ chat_message.user.userName }}:</strong> {{ chat_message.message }}
            </div>
        {% endfor %}
    </div>
    <div>
        <div class="form-group">
            <label for="message">Message:</label> <input type="text" id="message">
            <span id="user_typing"></span>
        </div>
        <button type="button" id="sendBtn">Send</button>
    </div>
{% endblock %}

{% block javascript %}
<script type="text/javascript">
    function scrollDown() {
        document.getElementById('chat').scrollTop =  document.getElementById('chat').scrollHeight
    }
    scrollDown();
    let login_user = '{{ app.user.username }}';
    let login_user_id = '{{ app.user.id }}';
    const socket = new WebSocket("ws://localhost:3001");

    socket.addEventListener("open", function() {
        console.log("CONNECTED");
    });

    function addMessage(name, message) {
        const messageHTML = "<div class='message'><strong>" + name + ":</strong> " + message + "</div>";
        document.getElementById("chat").innerHTML += messageHTML
        scrollDown();
    }

    socket.addEventListener("message", function(e) {
        console.log(e.data);
        try
        {
            const message = JSON.parse(e.data);
             if (message.type && message.type === 'typing') {
                if (message.status === 'started') {
                    // Display a "User is typing..." message
                    displayTypingMessage(message);
                    console.log('displayTypingMessage',message);
                } else if (message.status === 'stopped') {
                    // Remove the typing message
                    removeTypingMessage(message);
                    console.log('removeTypingMessage',message);
                }
             } else {
                addMessage(message.name, message.message);
             }
        }
        catch(e)
        {
            // Catch any errors
        }
    });
        
    function displayTypingMessage(message) {
        $("#user_typing").text(message.name+' is typing...');
        setTimeout(function() {
            $("#user_typing").text('');
        },1000);
    }

    function removeTypingMessage(message) {
        $("#user_typing").text('');
    }

    document.getElementById("sendBtn").addEventListener("click", function() {

        let message_text =  document.getElementById("message").value;
        if(message_text != ''){
            const message = {
                name: login_user,
                message: message_text,
                user_id: login_user_id
            };
            socket.send(JSON.stringify(message));
            document.getElementById("message").value ='';
            addMessage(message.name, message.message);
        }
    });

    // Detect when the user starts typing
    document.getElementById("message").addEventListener('keydown', function(event) {
        if (event.key !== 'Enter') {
            // Send a WebSocket event to notify other users
             const message_data = {
                name: login_user,
                user_id: login_user_id,
                type: 'typing',
                status: 'started'
            };
            socket.send(JSON.stringify(message_data));
        }
    });

    // Detect when the user stops typing (e.g., after a delay or when the input field is empty)
    document.getElementById("message").addEventListener('keyup', function(event) {
        if (event.key === 'Enter' || event.target.value === '') {
            // Send a WebSocket event to notify other users
            const message_data = {
                name: login_user,
                user_id: login_user_id,
                type: 'typing',
                status: 'stopped'
            };
            socket.send(JSON.stringify(message_data));
        }
    });

</script>
{% endblock %}